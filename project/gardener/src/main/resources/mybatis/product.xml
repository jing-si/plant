<?xml version="1.0" encoding="UTF-8"?>
  <!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="product">

	<select id="total" resultType="float">
		select count(*) from (
		<include refid="search"></include>
		) main
	</select>

	<!-- List -->
	<select id="list" resultType="Product">
		select * from PRODUCT
		LIMIT
		#{offset}, #{perPage}
	</select>

	<select id="item" resultType="Product">
		SELECT p.* FROM (select * from PRODUCT
		where PRODUCT_ID
		= #{productId}) p
		left JOIN bookmark b ON p.PRODUCT_ID =
		b.PRODUCT_ID
	</select>

	<!-- 생성 -->
	<insert id="add">
		insert into PRODUCT
		values(
		#{productId},
		#{productName},
		#{productSize},
		#{productImage},
		#{certId},
		#{productCertId},
		#{productStartDate},
		#{productEndDate},
		#{item.productInfo},
		#{companyId},
		#{elId},
		#{productCertReason},
		#{productBarcode}
		);
	</insert>

	<!-- 수정 -->
	<update id="update">

	</update>

	<!-- 삭제 -->
	<delete id="delete">
		delete from PRODUCT
		where PRODUCT_ID = #{productId}
	</delete>

	<select id="list_mid" resultType="Product">
		select * from PRODUCT p
		where
		p.EL_ID in
		(select b.BOT_CLASS_ID from BOT_CLASS b
		where b.MID_CLASS_ID
		= #{midClassId})
	</select>

	<select id="list_search" resultType="Product">
		select * from PRODUCT
		where
		PRODUCT_NAME like #{search}
	</select>

	<update id="autoClassify">
		Insert into PRODUCT(PRODUCT_ID,EL_ID)
		values
		<foreach collection="list" item="item" separator=",">
			(#{item.productId},
			#{item.elId})
		</foreach>
		on duplicate key update
		EL_ID = VALUES(EL_ID)
	</update>



	<!--대량 처리 -->
	<select id="list_pager" resultType="Product">
		<include refid="search"></include>
		LIMIT #{offset}, #{perPage}

	</select>

	<sql id="search">
		select P.*, C.COMPANY_NAME from PRODUCT P
		JOIN COMPANY C on
		P.COMPANY_ID = C.COMPANY_ID
		<where>
			<if
				test="search == 'total' or search == 'productId' and keyword != ''">OR PRODUCT_ID like #{searchKeyword}</if>
			<if
				test="search == 'total' or search == 'productName' and keyword != ''">OR PRODUCT_NAME like #{searchKeyword}</if>
			<if
				test="search == 'total' or search == 'productSize' and keyword != ''">OR PRODUCT_SIZE like #{searchKeyword}</if>
			<if
				test="search == 'total' or search == 'certId' and keyword != ''">OR CERT_ID IN (SELECT CERT.CERT_ID FROM CERT CERT WHERE
				CERT.CERT_NAME like #{searchKeyword})
			</if>
			<if
				test="search == 'total' or search == 'productCertId' and keyword != ''">OR PRODUCT_CERT_ID like #{searchKeyword}</if>
			<if
				test="search == 'total' or search == 'productInfo' and keyword != ''">OR PRODUCT_INFO like #{searchKeyword}</if>
			<if
				test="search == 'total' or search == 'companyName' and keyword != ''">OR COMPANY_NAME like #{searchKeyword}</if>
			<if test="search == 'total' or search == 'elId' and keyword != ''">OR EL_ID IN (SELECT BOT_CLASS_ID FROM BOT_CLASS WHERE
				BOT_CLASS_NAME like #{searchKeyword})
			</if>
			<if
				test="search == 'total' or search == 'productCertReason' and keyword != ''">OR PRODUCT_CERT_REASON like #{searchKeyword}</if>
			<if
				test="search == 'total' or search == 'productBarcode' and keyword != ''">OR PRODUCT_BARCODE like #{searchKeyword}</if>
		</where>
	</sql>


	<update id="update_list">
		Insert into PRODUCT
		values
		<foreach collection="list" item="item" separator=",">
			(#{item.productId},
			#{item.productName},
			LEFT(#{item.productSize},100),
			#{item.productImage},
			#{item.certId},
			#{item.productCertId},
			#{item.productStartDate},
			#{item.productEndDate},
			#{item.productInfo},
			#{item.companyId},
			#{item.elId},
			#{item.productCertReason},
			#{item.productBarcode})
		</foreach>
		on duplicate key update
		PRODUCT_ID = VALUES(PRODUCT_ID),
		PRODUCT_NAME =
		VALUES(PRODUCT_NAME),
		PRODUCT_SIZE = VALUES(PRODUCT_SIZE),
		PRODUCT_IMAGE = VALUES(PRODUCT_IMAGE),
		CERT_ID = VALUES(CERT_ID),
		PRODUCT_CERT_ID = VALUES(PRODUCT_CERT_ID),
		PRODUCT_START_DATE =
		VALUES(PRODUCT_START_DATE),
		PRODUCT_END_DATE =
		VALUES(PRODUCT_END_DATE),
		PRODUCT_INFO = VALUES(PRODUCT_INFO),
		COMPANY_ID = VALUES(COMPANY_ID),
		EL_ID =
		VALUES(EL_ID),
		PRODUCT_CERT_REASON =
		VALUES(PRODUCT_CERT_REASON),
		PRODUCT_BARCODE =
		VALUES(PRODUCT_BARCODE)
	</update>

	<update id="api_insert_list">
		Insert into PRODUCT
		values
		<foreach collection="list" item="item" separator=",">
			(#{item.productId},
			#{item.productName},
			LEFT(#{item.productSize},100),
			#{item.productImage},
			#{item.certId},
			#{item.productCertId},
			#{item.productStartDate},
			#{item.productEndDate},
			#{item.productInfo},
			#{item.companyId},
			#{item.elId},
			#{item.productCertReason},
			#{item.productBarcode})
		</foreach>

	</update>


	<insert id="insert_list">
		INSERT INTO PRODUCT
		VALUES
		<foreach collection="list" item="item" separator=",">
			(#{item.productId},
			#{item.productName},
			#{item.productSize},
			#{item.productImage},
			#{item.certId},
			#{item.productCertId},
			#{item.productStartDate},
			#{item.productEndDate},
			#{item.productInfo},
			#{item.companyId},
			#{item.elId},
			#{item.productCertReason},
			#{item.productBarcode})
		</foreach>
	</insert>

	<delete id="delete_list">
		DELETE FROM PRODUCT
		WHERE PRODUCT_ID in (
		<foreach collection="list" item="item" separator=",">
			#{item.productId}
		</foreach>
		)
	</delete>

	<select id="combo" resultType="ComboItem">
		SELECT "0" AS "table",
		CERT_ID AS
		"id", CERT_NAME AS "text"
		from CERT
		UNION
		SELECT "1" AS "table",
		BOT_CLASS_ID AS "id", BOT_CLASS_NAME AS "text"
		from BOT_CLASS

	</select>


	<!-- 바코드 들어왔을때 제품번호와 일치하는게 있는지 -->
	<select id="count" resultType="Integer">
		select count(*) from product
		where
		PRODUCT_ID = #{barcode}
	</select>


</mapper>