<?xml version="1.0" encoding="UTF-8"?>
  <!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="company">

	<!-- List -->
	<select id="list" resultType="Company">
		select * from (
		<include refid="search"></include>
		) M
		limit #{offset}, #{perPage}

	</select>

	<sql id="search">
		select * from COMPANY
		<where>
			<if
				test="(search == 'total' or search == 'companyId') and keyword != ''">OR COMPANY_ID like #{searchKeyword}</if>
			<if
				test="(search == 'total' or search == 'companyNAME') and keyword != ''">OR COMPANY_NAME like #{searchKeyword}</if>
			<if
				test="(search == 'total' or search == 'companyTel') and keyword != ''">OR COMPANY_TEL like #{searchKeyword}</if>
			<if
				test="(search == 'total' or search == 'companyAddress') and keyword != ''">OR COMPANY_ADDRESS like #{searchKeyword}</if>
			<if
				test="(search == 'total' or search == 'companyHomepage') and keyword != ''">OR COMPANY_HOMEPAGE like #{searchKeyword}</if>

		</where>
	</sql>


	<select id="listall" resultType="Company">
		select * from COMPANY

	</select>

	<select id="item" resultType="Company">
		select * from COMPANY
		where
		COMPANY_ID = #{companyId}
	</select>

	<select id="listIncludeCount" resultType="company">
		SELECT * FROM COMPANY
		NATURAL LEFT JOIN
		(SELECT COUNT(*) 'productCount',company_ID FROM
		PRODUCT
		GROUP BY company_ID) sub

	</select>


	<!-- 생성 -->
	<insert id="insert">
		insert into COMPANY
		values(#{companyId},#{companyName},#{companyTel},#{companyAddress},#{companyHomepage});
	</insert>

	<!-- 수정 -->
	<update id="update">
		update COMPANY
		set
		COMPANY_NAME = #{companyName}
		COMPANY_TEL = #{companyTel}
		COMPANY_ADDRESS =
		#{companyAddress}
		COMPANY_HOMEPAGE = #{companyHomepage}
		where
		COMPANY_ID = #{companyId}
	</update>

	<!-- 삭제 -->
	<delete id="delete">
		delete from COMPANY
		where COMPANY_ID = #{companyId}
	</delete>

	<update id="auto_update">
		Insert into COMPANY
		values
		<foreach collection="list" item="item" separator=",">
			(#{item.companyId},#{item.companyName},#{item.companyTel},#{item.companyAddress},#{item.companyHomepage})
		</foreach>
		on duplicate key update
		COMPANY_NAME = VALUES(COMPANY_NAME),
		COMPANY_TEL =VALUES(COMPANY_TEL),
		COMPANY_ADDRESS =
		VALUES(COMPANY_ADDRESS),
		COMPANY_HOMEPAGE=values(COMPANY_HOMEPAGE)
	</update>

	<select id="total" resultType="float">
		select count(*) from (
		<include refid="search"></include>
		) M
	</select>

	<select id="includeProduct" resultMap="icProdMap">
		SELECT
		C.COMPANY_ID
		, C.COMPANY_NAME, P.*
		, IFNULL(b.PRODUCT_ID,'N') 'bookmark'
		from
		(SELECT * from COMPANY WHERE COMPANY_ID = #{companyId}) C
		join product P on C.COMPANY_ID = P.COMPANY_ID
		left JOIN (select * from bookmark where USER_ID = #{userId}) b ON p.PRODUCT_ID =
		b.PRODUCT_ID
		WHERE EL_ID != 0
	</select>

	<resultMap type="Company" id="icProdMap" autoMapping="true">
		<id property="companyId" column="company_id" />
		<collection property="list" ofType="Product"
			column="PRODUCT_ID" javaType="ArrayList" autoMapping="true">
			<id property="productId" column="PRODUCT_ID" />
		</collection>
	</resultMap>

	<select id="productId" resultMap="icProdMap">
		select * from (select * from
		COMPANY WHERE COMPANY_ID = #{companyId}) C
		join PRODUCT P on
		C.COMPANY_ID = P.COMPANY_ID


	</select>

	<!--대량 처리 -->


	<update id="update_list">
		Insert into COMPANY
		values
		<foreach collection="list" item="item" separator=",">
			(#{item.companyId},
			#{item.companyName},
			#{item.companyTel},
			#{item.companyAddress},
			#{item.companyHomepage})
		</foreach>
		on duplicate key update
		COMPANY_NAME = VALUES(COMPANY_NAME),
		COMPANY_TEL = VALUES(COMPANY_TEL),
		COMPANY_ADDRESS =
		VALUES(COMPANY_ADDRESS),
		COMPANY_HOMEPAGE = VALUES(COMPANY_HOMEPAGE)


	</update>

	<insert id="insert_list">
		INSERT INTO COMPANY
		VALUES
		<foreach collection="list" item="item" separator=",">
			(#{item.companyId},
			#{item.companyName},
			#{item.companyTel},
			#{item.companyAddress},
			#{item.companyHomepage})
		</foreach>
	</insert>

	<delete id="delete_list">
		DELETE FROM COMPANY
		WHERE COMPANY_ID in (
		<foreach collection="list" item="item" separator=",">
			#{item.companyId}
		</foreach>
		)
	</delete>

	<select id="brandList" resultMap="BrandMap">
		select
		'가 나 다' as 'TITLE', COMPANY_ID, COMPANY_NAME from
		<include refid="brandSql"></include>
		<![CDATA[ where LEFT(COMPANY_NAME,1) >= '가' AND LEFT(COMPANY_NAME,1) < '라'  ]]>
		UNION
		SELECT
		'라 마 바' as 'TITLE', COMPANY_ID, COMPANY_NAME from
		<include refid="brandSql"></include>
		<![CDATA[ where LEFT(COMPANY_NAME,1) >= '라' AND LEFT(COMPANY_NAME,1) < '사'  ]]>
		UNION
		SELECT
		'사 아 자' as 'TITLE', COMPANY_ID, COMPANY_NAME from
		<include refid="brandSql"></include>
		<![CDATA[ where LEFT(COMPANY_NAME,1) >= '사' AND LEFT(COMPANY_NAME,1) < '차'  ]]>
		UNION
		SELECT
		'차 카 타' as 'TITLE', COMPANY_ID, COMPANY_NAME from
		<include refid="brandSql"></include>
		<![CDATA[ where LEFT(COMPANY_NAME,1) >= '차' AND LEFT(COMPANY_NAME,1) < '파'  ]]>
		UNION
		SELECT
		'파 하' as 'TITLE', COMPANY_ID, COMPANY_NAME from
		<include refid="brandSql"></include>
		<![CDATA[ where LEFT(COMPANY_NAME,1) >= '파' ]]>
		UNION
		SELECT
		'A B C D E' as 'TITLE', COMPANY_ID, COMPANY_NAME from
		<include refid="brandSql"></include>
		<![CDATA[ where LEFT(COMPANY_NAME,1) >= 'A' AND LEFT(COMPANY_NAME,1) < 'F'  ]]>
		UNION
		SELECT
		'F G H I J' as 'TITLE', COMPANY_ID, COMPANY_NAME from
		<include refid="brandSql"></include>
		<![CDATA[ where LEFT(COMPANY_NAME,1) >= 'F' AND LEFT(COMPANY_NAME,1) < 'K'  ]]>
		UNION
		SELECT
		'K L M N O' as 'TITLE', COMPANY_ID, COMPANY_NAME from
		<include refid="brandSql"></include>
		<![CDATA[ where LEFT(COMPANY_NAME,1) >= 'K' AND LEFT(COMPANY_NAME,1) < 'P'  ]]>
		UNION
		SELECT
		'P Q R S T' as 'TITLE', COMPANY_ID, COMPANY_NAME from
		<include refid="brandSql"></include>
		<![CDATA[ where LEFT(COMPANY_NAME,1) >= 'P' AND LEFT(COMPANY_NAME,1) < 'U'  ]]>
		UNION
		SELECT
		'U V W X Y Z' as 'TITLE', COMPANY_ID, COMPANY_NAME from
		<include refid="brandSql"></include>
		<![CDATA[ where LEFT(COMPANY_NAME,1) >= 'U' AND LEFT(COMPANY_NAME,1) <= 'Z' ]]>
		ORDER BY COMPANY_NAME
	</select>
	<sql id="brandSql">
		(SELECT DISTINCT P.COMPANY_ID, C.COMPANY_NAME FROM (SELECT
		COMPANY_ID, EL_ID
		FROM product WHERE EL_ID != 0) P
		LEFT JOIN COMPANY C
		ON C.COMPANY_ID = P.COMPANY_ID) M
	</sql>

	<resultMap type="BrandVO" id="BrandMap" autoMapping="true">
		<id column="TITLE" property="title" />
		<collection property="list" ofType="Company"
			javaType="ArrayList" column="TITLE" autoMapping="true">
			<id column="COMPANY_ID" property="companyId" />
		</collection>
	</resultMap>

</mapper>